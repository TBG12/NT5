;===================================================================
;   Ethernet initialization file
;===================================================================
[ETYPE_EXCEPTIONS]
0x0200  =   PUP
0x0201  =   PUPAT

; USED BY ETHERNET AND SNAP PROTOCOLs            
[ETYPES]
0x600   =   XNS
0x800   =   IP
0x806   =   ARP_RARP,1
0x0bad  =   VINES_IP
0x1984  =   TRAIL
0x8035  =   ARP_RARP,2
0x809B  =   LAP
0x80D5  =   SNA
0x80F3  =   AARP
0x8137  =   IPX
0x8138  =   IPX
0x86DD  =   IP6
0x888E  =   EAPOL
0x9000  =   ATMARP

; USED BY TOKEN RING
[TOKEN_RING]
0x01    =   LLC
0x00    =   TMAC
0xba    =   VINES_IP

; USED BY FDDI
; Note that the low nibble is masked (byte & 0xf0)
[FDDI]
0x50    =   LLC
0x40    =   SMT
0x00    =   SMT
0xD0    =   LLC
0x10    =   LLC
0x90    =   LLC
0x80    =   MAC
0xC0    =   MAC

; USED TO DETERMINE IF RAW IPX PACKETS ARE TO BE DETECTED
[FORCE_RAW_IPX]
FDDI        = YES
ETHERNET    = YES

; USED BY ATM FOR HANDOFF BASED ON VPI/VCI VALUES
; EACH VALUE HAS THE FIRST WORD AS THE VPI AND SECOND WORD AS THE VCI VALUE
; ILMI is parsed by SNMP parser.
[ATM]
0x00000005  = UNI31
0x00000010  = SNMP
; To get around the bug in GetProtocolFromTable in creathot.c
0xFFFFFFFF  = BOGUS

; USED TO FIND OUT WHAT TO DO WITH DATA NOT RECOGNIZED
; 0x00 - RAW DATA,   0x01 - LANE 802.3 DATA,   0x02 - LANE 802.5 DATA
[ATM_DATA]
TREAT_AS = 0x01
